export const fileNames: Record<string, string> = {
  ".adonisrc.json": "adonis",
  ace: "adonis",
  ".alexrc": "alex",
  ".alexrc.yaml": "alex",
  ".alexrc.yml": "alex",
  ".alexrc.js": "alex",
  "androidmanifest.xml": "android",
  "angular-cli.json": "angular",
  ".angular-cli.json": "angular",
  "angular.json": "angular",
  "ng-package.json": "angular",
  ".ansible-lint": "ansible-lint",
  "ansible-lint.yml": "ansible-lint",
  "ansible-lint.yaml": "ansible-lint",
  "maven.config": "apache",
  "jvm.config": "apache",
  "pom.xml": "apache",
  "apollo.config.js": "apollo",
  "apollo.config.ts": "apollo",
  "apple-app-site-association": "apple",
  "apple-developer-merchantid-domain-association": "apple",
  "astro.config.js": "astro-config",
  "astro.config.mjs": "astro-config",
  "astro.config.cjs": "astro-config",
  "astro.config.ts": "astro-config",
  "astro.config.cts": "astro-config",
  "astro.config.mts": "astro-config",
  "azure-pipelines.yml": "azure-pipelines",
  "azure-pipelines.yaml": "azure-pipelines",
  "azure-pipelines-main.yml": "azure-pipelines",
  "azure-pipelines-main.yaml": "azure-pipelines",
  ".babelrc": "babel",
  ".babelrc.cjs": "babel",
  ".babelrc.js": "babel",
  ".babelrc.mjs": "babel",
  ".babelrc.json": "babel",
  "babel.config.cjs": "babel",
  "babel.config.js": "babel",
  "babel.config.mjs": "babel",
  "babel.config.json": "babel",
  "babel-transform.js": "babel",
  ".babel-plugin-macrosrc": "babel",
  ".babel-plugin-macrosrc.json": "babel",
  ".babel-plugin-macrosrc.yaml": "babel",
  ".babel-plugin-macrosrc.yml": "babel",
  ".babel-plugin-macrosrc.js": "babel",
  "babel-plugin-macros.config.js": "babel",
  "applypatch-msg": "bash",
  "pre-applypatch": "bash",
  "post-applypatch": "bash",
  "pre-commit": "bash",
  "prepare-commit-message": "bash",
  "commit-msg": "bash",
  "post-commit": "bash",
  "pre-rebase": "bash",
  "post-checkout": "bash",
  "post-merge": "bash",
  "pre-receive": "bash",
  update: "bash",
  "post-receive": "bash",
  "post-update": "bash",
  "pre-auto-gc": "bash",
  "post-rewrite": "bash",
  "pre-push": "bash",
  ".bazelrc": "bazel",
  "benchmark.md": "benchmark",
  "benchmark.rst": "benchmark",
  "benchmark.txt": "benchmark",
  "benchmarks.md": "benchmark",
  "benchmarks.rst": "benchmark",
  "benchmarks.txt": "benchmark",
  "bicepconfig.json": "bicep",
  "biome.json": "biome",
  "biome.jsonc": "biome",
  "bitbucket-pipelines.yaml": "bitbucket",
  "bitbucket-pipelines.yml": "bitbucket",
  "blitz.config.js": "blitz",
  "blitz.config.ts": "blitz",
  ".blitz.config.compiled.js": "blitz",
  ".bowerrc": "bower",
  "bower.json": "bower",
  browserslist: "browserslist",
  ".browserslistrc": "browserslist",
  "bun.lock": "bun-lock",
  "bun.lockb": "bun-lock",
  "bunfig.toml": "bun",
  "cabal.project": "cabal",
  caddyfile: "caddy",
  "capacitor.config.json": "capacitor",
  "capacitor.config.ts": "capacitor",
  "cargo.lock": "cargo-lock",
  "cargo.toml": "cargo",
  changelog: "changelog",
  "changelog.md": "changelog",
  "changelog.rst": "changelog",
  "changelog.txt": "changelog",
  changes: "changelog",
  "changes.md": "changelog",
  "changes.rst": "changelog",
  "changes.txt": "changelog",
  "circle.yml": "circle-ci",
  "cmakelists.txt": "cmake",
  "cmakecache.txt": "cmake",
  ".codeclimate.yml": "code-climate",
  "code_of_conduct.md": "code-of-conduct",
  "code_of_conduct.txt": "code-of-conduct",
  code_of_conduct: "code-of-conduct",
  codeowners: "codeowners",
  owners: "codeowners",
  ".commitlintrc": "commitlint",
  ".commitlintrc.js": "commitlint",
  ".commitlintrc.cjs": "commitlint",
  ".commitlintrc.ts": "commitlint",
  ".commitlintrc.cts": "commitlint",
  ".commitlintrc.json": "commitlint",
  ".commitlintrc.yaml": "commitlint",
  ".commitlintrc.yml": "commitlint",
  ".commitlint.yaml": "commitlint",
  ".commitlint.yml": "commitlint",
  "commitlint.config.js": "commitlint",
  "commitlint.config.cjs": "commitlint",
  "commitlint.config.ts": "commitlint",
  "commitlint.config.cts": "commitlint",
  "contributing.md": "contributing",
  "contributing.rst": "contributing",
  "contributing.txt": "contributing",
  contributing: "contributing",
  "cspell.json": "cspell",
  "cspell.yml": "cspell",
  "cspell.yaml": "cspell",
  ".cspell.json": "cspell",
  ".cspell.yml": "cspell",
  ".cspell.yaml": "cspell",
  "cspell.config.js": "cspell",
  "cspell.config.cjs": "cspell",
  "cspell.config.yml": "cspell",
  "cspell.config.yaml": "cspell",
  ".cursorignore": "cursor-ignore",
  ".cursorindexingignore": "cursor-ignore",
  ".cursorrules": "cursor",
  "cypress.json": "cypress",
  "cypress.env.json": "cypress",
  "cypress.config.ts": "cypress",
  "cypress.config.js": "cypress",
  "cypress.config.cjs": "cypress",
  "cypress.config.mjs": "cypress",
  "deno.lock": "deno_lock",
  "deno.json": "deno",
  "deno.jsonc": "deno",
  "dependabot.yml": "dependabot",
  "dependabot.yaml": "dependabot",
  "devcontainer.json": "devcontainer",
  ".devcontainer.json": "devcontainer",
  "docker-compose.yml": "docker-compose",
  "docker-compose.override.yml": "docker-compose",
  "docker-compose.prod.yml": "docker-compose",
  "docker-compose.production.yml": "docker-compose",
  "docker-compose.alpha.yml": "docker-compose",
  "docker-compose.beta.yml": "docker-compose",
  "docker-compose.stage.yml": "docker-compose",
  "docker-compose.staging.yml": "docker-compose",
  "docker-compose.dev.yml": "docker-compose",
  "docker-compose.development.yml": "docker-compose",
  "docker-compose.local.yml": "docker-compose",
  "docker-compose.test.yml": "docker-compose",
  "docker-compose.testing.yml": "docker-compose",
  "docker-compose.ci.yml": "docker-compose",
  "docker-compose.web.yml": "docker-compose",
  "docker-compose.worker.yml": "docker-compose",
  "docker-compose.yaml": "docker-compose",
  "docker-compose.override.yaml": "docker-compose",
  "docker-compose.prod.yaml": "docker-compose",
  "docker-compose.production.yaml": "docker-compose",
  "docker-compose.alpha.yaml": "docker-compose",
  "docker-compose.beta.yaml": "docker-compose",
  "docker-compose.stage.yaml": "docker-compose",
  "docker-compose.staging.yaml": "docker-compose",
  "docker-compose.dev.yaml": "docker-compose",
  "docker-compose.development.yaml": "docker-compose",
  "docker-compose.local.yaml": "docker-compose",
  "docker-compose.test.yaml": "docker-compose",
  "docker-compose.testing.yaml": "docker-compose",
  "docker-compose.ci.yaml": "docker-compose",
  "docker-compose.web.yaml": "docker-compose",
  "docker-compose.worker.yaml": "docker-compose",
  "compose.yaml": "docker-compose",
  "compose.override.yaml": "docker-compose",
  "compose.prod.yaml": "docker-compose",
  "compose.production.yaml": "docker-compose",
  "compose.alpha.yaml": "docker-compose",
  "compose.beta.yaml": "docker-compose",
  "compose.stage.yaml": "docker-compose",
  "compose.staging.yaml": "docker-compose",
  "compose.dev.yaml": "docker-compose",
  "compose.development.yaml": "docker-compose",
  "compose.local.yaml": "docker-compose",
  "compose.test.yaml": "docker-compose",
  "compose.testing.yaml": "docker-compose",
  "compose.ci.yaml": "docker-compose",
  "compose.web.yaml": "docker-compose",
  "compose.worker.yaml": "docker-compose",
  "compose.yml": "docker-compose",
  "compose.override.yml": "docker-compose",
  "compose.prod.yml": "docker-compose",
  "compose.production.yml": "docker-compose",
  "compose.alpha.yml": "docker-compose",
  "compose.beta.yml": "docker-compose",
  "compose.stage.yml": "docker-compose",
  "compose.staging.yml": "docker-compose",
  "compose.dev.yml": "docker-compose",
  "compose.development.yml": "docker-compose",
  "compose.local.yml": "docker-compose",
  "compose.test.yml": "docker-compose",
  "compose.testing.yml": "docker-compose",
  "compose.ci.yml": "docker-compose",
  "compose.web.yml": "docker-compose",
  "compose.worker.yml": "docker-compose",
  dockerfile: "docker",
  "dockerfile.prod": "docker",
  "dockerfile.production": "docker",
  "dockerfile.alpha": "docker",
  "dockerfile.beta": "docker",
  "dockerfile.stage": "docker",
  "dockerfile.staging": "docker",
  "dockerfile.dev": "docker",
  "dockerfile.development": "docker",
  "dockerfile.local": "docker",
  "dockerfile.test": "docker",
  "dockerfile.testing": "docker",
  "dockerfile.ci": "docker",
  "dockerfile.web": "docker",
  "dockerfile.worker": "docker",
  containerfile: "docker",
  "containerfile.prod": "docker",
  "containerfile.production": "docker",
  "containerfile.alpha": "docker",
  "containerfile.beta": "docker",
  "containerfile.stage": "docker",
  "containerfile.staging": "docker",
  "containerfile.dev": "docker",
  "containerfile.development": "docker",
  "containerfile.local": "docker",
  "containerfile.test": "docker",
  "containerfile.testing": "docker",
  "containerfile.ci": "docker",
  "containerfile.web": "docker",
  "containerfile.worker": "docker",
  "docusaurus.config.js": "docusaurus",
  "docusaurus.config.mjs": "docusaurus",
  "docusaurus.config.cjs": "docusaurus",
  "docusaurus.config.ts": "docusaurus",
  "drizzle.config.ts": "drizzle-orm",
  "drizzle.config.js": "drizzle-orm",
  "dub.selections.json": "dub-selections",
  "dub.json": "dub",
  "dub.sdl": "dub",
  ".editorconfig": "editorconfig",
  ".eleventy.js": "eleventy",
  "eleventy.config.js": "eleventy",
  "eleventy.config.mjs": "eleventy",
  "eleventy.config.cjs": "eleventy",
  ".eleventyignore": "eleventy",
  ".ember-cli": "ember",
  ".ember-cli.js": "ember",
  "ember-cli-builds.js": "ember",
  ".env.defaults": "env",
  ".env.example": "env",
  ".env.sample": "env",
  ".env.template": "env",
  ".env.schema": "env",
  ".env.local": "env",
  ".env.dev": "env",
  ".env.development": "env",
  ".env.alpha": "env",
  ".env.e2e": "env",
  ".env.qa": "env",
  ".env.dist": "env",
  ".env.prod": "env",
  ".env.production": "env",
  ".env.stage": "env",
  ".env.staging": "env",
  ".env.preview": "env",
  ".env.test": "env",
  ".env.testing": "env",
  ".env.dev.local": "env",
  ".env.development.local": "env",
  ".env.qa.local": "env",
  ".env.prod.local": "env",
  ".env.production.local": "env",
  ".env.staging.local": "env",
  ".env.test.local": "env",
  ".env.uat": "env",
  ".env.cat": "env",
  ".envrc": "envrc",
  "esbuild.js": "esbuild",
  "esbuild.ts": "esbuild",
  "esbuild.cjs": "esbuild",
  "esbuild.mjs": "esbuild",
  "esbuild.config.js": "esbuild",
  "esbuild.config.ts": "esbuild",
  "esbuild.config.cjs": "esbuild",
  "esbuild.config.mjs": "esbuild",
  ".eslintignore": "eslint-ignore",
  ".eslintcache,": "eslint-ignore",
  ".eslintrc.js": "eslint",
  ".eslintrc.cjs": "eslint",
  ".eslintrc.yaml": "eslint",
  ".eslintrc.yml": "eslint",
  ".eslintrc.json": "eslint",
  ".eslintrc-md.js": "eslint",
  ".eslintrc-jsdoc.js": "eslint",
  ".eslintrc": "eslint",
  "eslint.config.js": "eslint",
  "eslint.config.cjs": "eslint",
  "eslint.config.mjs": "eslint",
  "eslint.config.ts": "eslint",
  "eslint.config.cts": "eslint",
  "eslint.config.mts": "eslint",
  fastfile: "fastlane",
  appfile: "fastlane",
  snapfile: "fastlane",
  matchfile: "fastlane",
  deliverfile: "fastlane",
  scanfile: "fastlane",
  gymfile: "fastlane",
  "favicon.ico": "favicon",
  "firebase.json": "firebase",
  ".firebaserc": "firebase",
  "firestore.rules": "firebase",
  "storage.rules": "firebase",
  "firestore.indexes.json": "firebase",
  ".flutter-plugins": "flutter",
  ".flutter-plugins-dependencies": "flutter",
  ".metadata": "flutter",
  "foreman.toml": "foreman",
  "aftman.toml": "foreman",
  ".fvmrc": "fvm",
  "fvm_config.json": "fvm",
  "gatsby-config.js": "gatsby",
  "gatsby-config.mjs": "gatsby",
  "gatsby-config.ts": "gatsby",
  "gatsby-node.js": "gatsby",
  "gatsby-node.mjs": "gatsby",
  "gatsby-node.ts": "gatsby",
  "gatsby-browser.js": "gatsby",
  "gatsby-browser.tsx": "gatsby",
  "gatsby-ssr.js": "gatsby",
  "gatsby-ssr.tsx": "gatsby",
  "release-please-config.json": "gcp",
  ".release-please-manifest.json": "gcp",
  "cliff.toml": "git-cliff",
  ".git": "git",
  ".gitignore": "git",
  ".gitmessage": "git",
  ".gitignore-global": "git",
  ".gitignore_global": "git",
  ".gitattributes": "git",
  ".gitattributes-global": "git",
  ".gitattributes_global": "git",
  ".gitconfig": "git",
  ".gitmodules": "git",
  ".gitkeep": "git",
  ".keep": "git",
  ".gitpreserve": "git",
  ".gitinclude": "git",
  ".git-blame-ignore": "git",
  ".git-blame-ignore-revs": "git",
  ".git-for-windows-updater": "git",
  "git-history": "git",
  ".gitpod.yml": "gitpod",
  "gleam.toml": "gleam-config",
  "go.mod": "go-mod",
  "go.sum": "go-mod",
  "go.work": "go-mod",
  "go.work.sum": "go-mod",
  ".gdignore": "godot-assets",
  "._sc_": "godot-assets",
  _sc_: "godot-assets",
  "gradle.properties": "gradle",
  gradlew: "gradle",
  "gradle-wrapper.properties": "gradle",
  ".graphqlconfig": "graphql",
  ".graphqlrc": "graphql",
  ".graphqlrc.json": "graphql",
  ".graphqlrc.js": "graphql",
  ".graphqlrc.cjs": "graphql",
  ".graphqlrc.ts": "graphql",
  ".graphqlrc.toml": "graphql",
  ".graphqlrc.yaml": "graphql",
  ".graphqlrc.yml": "graphql",
  "graphql.config.json": "graphql",
  "graphql.config.js": "graphql",
  "graphql.config.cjs": "graphql",
  "graphql.config.ts": "graphql",
  "graphql.config.toml": "graphql",
  "graphql.config.yaml": "graphql",
  "graphql.config.yml": "graphql",
  "gulpfile.js": "gulp",
  "gulpfile.mjs": "gulp",
  "gulpfile.ts": "gulp",
  "gulpfile.cts": "gulp",
  "gulpfile.mts": "gulp",
  "gulpfile.babel.js": "gulp",
  "hacking.md": "hacking",
  "hacking.txt": "hacking",
  hacking: "hacking",
  "hardhat.config.js": "hardhat",
  "hardhat.config.ts": "hardhat",
  ".helmignore": "helm",
  "chart.lock": "helm",
  procfile: "heroku",
  "histoire.config.ts": "histoire",
  "histoire.config.js": "histoire",
  ".histoire.js": "histoire",
  ".histoire.ts": "histoire",
  CNAME: "http",
  "hugo.toml": "hugo",
  "hugo.yaml": "hugo",
  "hugo.json": "hugo",
  "humans.txt": "humans",
  ".huskyrc": "husky",
  "husky.config.js": "husky",
  ".huskyrc.json": "husky",
  ".huskyrc.js": "husky",
  ".huskyrc.yaml": "husky",
  ".huskyrc.yml": "husky",
  "ionic.config.json": "ionic",
  ".io-config.json": "ionic",
  "jsconfig.json": "javascript-config",
  "jest.config.js": "jest",
  "jest.config.cjs": "jest",
  "jest.config.mjs": "jest",
  "jest.config.ts": "jest",
  "jest.config.cts": "jest",
  "jest.config.mts": "jest",
  "jest.config.json": "jest",
  "jest.e2e.config.js": "jest",
  "jest.e2e.config.cjs": "jest",
  "jest.e2e.config.mjs": "jest",
  "jest.e2e.config.ts": "jest",
  "jest.e2e.config.cts": "jest",
  "jest.e2e.config.mts": "jest",
  "jest.e2e.config.json": "jest",
  "jest.e2e.json": "jest",
  "jest-unit.config.js": "jest",
  "jest-e2e.config.js": "jest",
  "jest-e2e.config.cjs": "jest",
  "jest-e2e.config.mjs": "jest",
  "jest-e2e.config.ts": "jest",
  "jest-e2e.config.cts": "jest",
  "jest-e2e.config.mts": "jest",
  "jest-e2e.config.json": "jest",
  "jest-e2e.json": "jest",
  "jest-github-actions-reporter.js": "jest",
  "jest.setup.js": "jest",
  "jest.setup.ts": "jest",
  "jest.json": "jest",
  ".jestrc": "jest",
  ".jestrc.js": "jest",
  ".jestrc.json": "jest",
  "jest.teardown.js": "jest",
  "jest-preset.json": "jest",
  "jest-preset.js": "jest",
  "jest-preset.cjs": "jest",
  "jest-preset.mjs": "jest",
  "jest.preset.js": "jest",
  "jest.preset.mjs": "jest",
  "jest.preset.cjs": "jest",
  "jest.preset.json": "jest",
  ".jscsrc": "json",
  ".jshintrc": "json",
  "composer.lock": "json",
  ".jsbeautifyrc": "json",
  ".esformatter": "json",
  "cdp.pid": "json",
  ".lintstagedrc": "lint-staged",
  ".whitesource": "json",
  "jule.mod": "jule",
  justfile: "just",
  ".justfile": "just",
  ".htpasswd": "key",
  artisan: "laravel",
  "lerna.json": "lerna",
  copying: "license",
  "copying.md": "license",
  "copying.rst": "license",
  "copying.txt": "license",
  copyright: "license",
  "copyright.md": "license",
  "copyright.rst": "license",
  "copyright.txt": "license",
  license: "license",
  "license-agpl": "license",
  "license-apache": "license",
  "license-bsd": "license",
  "license-mit": "license",
  "license-gpl": "license",
  "license-lgpl": "license",
  unlicense: "license",
  "license.md": "license",
  "license.rst": "license",
  "license.txt": "license",
  licence: "license",
  "licence-agpl": "license",
  "licence-apache": "license",
  "licence-bsd": "license",
  "licence-mit": "license",
  "licence-gpl": "license",
  "licence-lgpl": "license",
  unlicence: "license",
  "licence.md": "license",
  "licence.rst": "license",
  "licence.txt": "license",
  ".lintstagedrc.json": "lint-staged",
  ".lintstagedrc.yaml": "lint-staged",
  ".lintstagedrc.yml": "lint-staged",
  ".lintstagedrc.mjs": "lint-staged",
  ".lintstagedrc.mts": "lint-staged",
  ".lintstagedrc.cjs": "lint-staged",
  ".lintstagedrc.cts": "lint-staged",
  ".lintstagedrc.js": "lint-staged",
  ".lintstagedrc.ts": "lint-staged",
  "lint-staged.config.js": "lint-staged",
  "lint-staged.config.ts": "lint-staged",
  "lint-staged.config.mjs": "lint-staged",
  "lint-staged.config.mts": "lint-staged",
  "lint-staged.config.cjs": "lint-staged",
  "lint-staged.config.cts": "lint-staged",
  ".liquidrc.json": "liquid",
  ".liquidrc": "liquid",
  ".luacheckrc": "lua",
  ".rock": "lua-rocks",
  ".rockspec": "lua-rocks",
  "selene.toml": "luau-check",
  "selene.yml": "luau-check",
  "selene.yaml": "luau-check",
  ".luaurc": "luau-config",
  ".ds_store": "macos",
  makefile: "makefile",
  gnumakefile: "makefile",
  kbuild: "makefile",
  "mantle.yml": "mantle",
  ".mantle-state.yml": "mantle",
  "book.toml": "mdbook",
  "meson.build": "meson",
  "meson_options.txt": "meson",
  ".mjmlconfig": "mjml",
  ".modernizrrc": "modernizr",
  ".modernizrrc.js": "modernizr",
  ".modernizrrc.json": "modernizr",
  "moon.yml": "moonrepo",
  "moon.yaml": "moonrepo",
  "moonwave.toml": "moonwave",
  "directory.build.props": "msbuild",
  "directory.build.rsp": "msbuild",
  "directory.build.targets": "msbuild",
  "directory.packages.props": "msbuild",
  "nativescript.config.ts": "nativescript",
  "nativescript.config.js": "nativescript",
  "nest-cli.json": "nest",
  ".nest-cli.json": "nest",
  "nestconfig.json": "nest",
  ".nestconfig.json": "nest",
  "netlify.json": "netlify",
  "netlify.yml": "netlify",
  "netlify.yaml": "netlify",
  "netlify.toml": "netlify",
  "next.config.js": "next",
  "next.config.mjs": "next",
  "next.config.ts": "next",
  "next.config.mts": "next",
  "nginx.conf": "nginx",
  "flake.lock": "nix-lock",
  "nodemon.json": "nodemon",
  "nodemon-debug.json": "nodemon",
  ".npmignore": "npm-ignore",
  "package-lock.json": "npm-lock",
  ".npmrc": "npm",
  "nuget.config": "nuget",
  ".nuspec": "nuget",
  "nuget.exe": "nuget",
  ".nuxtignore": "nuxt-ignore",
  ".nuxtrc": "nuxt",
  "nuxt.config.js": "nuxt",
  "nuxt.config.ts": "nuxt",
  ".nxignore": "nx-ignore",
  "nx.json": "nx",
  "package.json": "package-json",
  ".nvmrc": "package-json",
  ".esmrc": "package-json",
  ".node-version": "package-json",
  "panda.config.ts": "panda-css",
  "panda.config.js": "panda-css",
  "panda.config.mjs": "panda-css",
  "panda.config.mts": "panda-css",
  "panda.config.cjs": "panda-css",
  "pesde.lock": "pesde-lock",
  "pesde.toml": "pesde",
  ".phrase.yml": "phrase",
  ".phraseapp.yml": "phrase",
  ".phrase.yaml": "phrase",
  ".phraseapp.yaml": "phrase",
  "pixi.lock": "pixi-lock",
  "pixi.toml": "pixi",
  "playwright.config.js": "playwright",
  "playwright.config.mjs": "playwright",
  "playwright.config.ts": "playwright",
  "playwright.config.base.js": "playwright",
  "playwright.config.base.mjs": "playwright",
  "playwright.config.base.ts": "playwright",
  "playwright-ct.config.js": "playwright",
  "playwright-ct.config.mjs": "playwright",
  "playwright-ct.config.ts": "playwright",
  "plopfile.js": "plop",
  "plopfile.cjs": "plop",
  "plopfile.mjs": "plop",
  "plopfile.ts": "plop",
  "pnpm-lock.yaml": "pnpm-lock",
  "pnpm-workspace.yaml": "pnpm",
  ".pnpmfile.cjs": "pnpm",
  "poetry.lock": "poetry-lock",
  "postcss.config.js": "postcss",
  "postcss.config.cjs": "postcss",
  "postcss.config.mjs": "postcss",
  "postcss.config.ts": "postcss",
  "postcss.config.cts": "postcss",
  "postcss.config.mts": "postcss",
  ".postcssrc.js": "postcss",
  ".postcssrc.cjs": "postcss",
  ".postcssrc.ts": "postcss",
  ".postcssrc.cts": "postcss",
  ".postcssrc": "postcss",
  ".postcssrc.json": "postcss",
  ".postcssrc.yaml": "postcss",
  ".postcssrc.yml": "postcss",
  ".pre-commit-config.yaml": "pre-commit",
  ".pre-commit-hooks.yaml": "pre-commit",
  "premake4.lua": "premake",
  "premake5.lua": "premake",
  "premake.lua": "premake",
  ".prettierignore": "prettier-ignore",
  ".prettierrc": "prettier",
  ".prettierrc.json": "prettier",
  ".prettierrc.yml": "prettier",
  ".prettierrc.yaml": "prettier",
  ".prettierrc.json5": "prettier",
  ".prettierrc.js": "prettier",
  "prettier.config.js": "prettier",
  ".prettierrc.ts": "prettier",
  "prettier.config.ts": "prettier",
  ".prettierrc.mjs": "prettier",
  "prettier.config.mjs": "prettier",
  ".prettierrc.mts": "prettier",
  "prettier.config.mts": "prettier",
  ".prettierrc.cjs": "prettier",
  "prettier.config.cjs": "prettier",
  ".prettierrc.cts": "prettier",
  "prettier.config.cts": "prettier",
  ".prettierrc.toml": "prettier",
  "prisma.yml": "prisma",
  ".prototools": "prototools",
  ".pug-lintrc": "pug",
  ".pug-lintrc.js": "pug",
  ".pug-lintrc.json": "pug",
  ".puppeteerrc.cjs,": "puppeteer",
  ".puppeteerrc.js,": "puppeteer",
  ".puppeteerrc": "puppeteer",
  ".puppeteerrc.json,": "puppeteer",
  ".puppeteerrc.yaml,": "puppeteer",
  "puppeteer.config.js": "puppeteer",
  "puppeteer.config.cjs": "puppeteer",
  "pyproject.toml": "python-config",
  "requirements.txt": "python-config",
  "requirements-dev.txt": "python-config",
  "requirements-test.txt": "python-config",
  ".python-version": "python-config",
  ".rhistory": "r",
  "readme.md": "readme",
  "readme.rst": "readme",
  "readme.txt": "readme",
  readme: "readme",
  "redwood.toml": "redwood",
  ".goreleaser.yaml": "release",
  "remix.config.js": "remix",
  "remix.config.ts": "remix",
  ".renovaterc": "renovate",
  ".renovaterc.json": "renovate",
  "renovate-config.json": "renovate",
  "renovate.json": "renovate",
  "renovate.json5": "renovate",
  "robots.txt": "robots",
  "rocket.toml": "rocket",
  "rokit.toml": "rokit",
  "rollup.config.js": "rollup",
  "rollup.config.mjs": "rollup",
  "rollup.config.ts": "rollup",
  "rollup-config.js": "rollup",
  "rollup-config.mjs": "rollup",
  "rollup-config.ts": "rollup",
  "rollup.config.common.js": "rollup",
  "rollup.config.common.mjs": "rollup",
  "rollup.config.common.ts": "rollup",
  "rollup.config.base.js": "rollup",
  "rollup.config.base.mjs": "rollup",
  "rollup.config.base.ts": "rollup",
  "rollup.config.prod.js": "rollup",
  "rollup.config.prod.mjs": "rollup",
  "rollup.config.prod.ts": "rollup",
  "rollup.config.dev.js": "rollup",
  "rollup.config.dev.mjs": "rollup",
  "rollup.config.dev.ts": "rollup",
  "rollup.config.prod.vendor.js": "rollup",
  "rollup.config.prod.vendor.mjs": "rollup",
  "rollup.config.prod.vendor.ts": "rollup",
  "gemfile.lock": "ruby-gem-lock",
  gemfile: "ruby-gem",
  ".ruby-version": "ruby",
  "ruff.toml": "ruff",
  ".ruff.toml": "ruff",
  "rustfmt.toml": "rust-config",
  ".rustfmt.toml": "rust-config",
  "rust-toolchain.toml": "rust-config",
  "clippy.toml": "rust-config",
  "security.md": "security",
  "security.txt": "security",
  security: "security",
  ".releaserc": "semantic-release",
  ".releaserc.yaml": "semantic-release",
  ".releaserc.yml": "semantic-release",
  ".releaserc.json": "semantic-release",
  ".releaserc.js": "semantic-release",
  ".releaserc.cjs": "semantic-release",
  "release.config.js": "semantic-release",
  "release.config.cjs": "semantic-release",
  ".semgrepignore": "semgrep-ignore",
  "semgrep.yml": "semgrep",
  ".sentryclirc": "sentry",
  "serverless.yml": "serverless",
  "serverless.yaml": "serverless",
  "serverless.json": "serverless",
  "serverless.js": "serverless",
  "serverless.ts": "serverless",
  "snowpack.config.js": "snowpack",
  "snowpack.config.cjs": "snowpack",
  "snowpack.config.mjs": "snowpack",
  "snowpack.config.ts": "snowpack",
  "snowpack.config.cts": "snowpack",
  "snowpack.config.mts": "snowpack",
  "snowpack.deps.json": "snowpack",
  "snowpack.config.json": "snowpack",
  "sonar-project.properties": "sonar-cloud",
  ".sonarcloud.properties": "sonar-cloud",
  "sonarcloud.yaml": "sonar-cloud",
  ".stackblitzrc": "stackblitz",
  "stencil.config.js": "stencil",
  "stencil.config.ts": "stencil",
  "stitches.config.js": "stitches",
  "stitches.config.ts": "stitches",
  ".stylelintignore": "stylelint-ignore",
  ".stylelintcache": "stylelint-ignore",
  ".stylelintrc": "stylelint",
  "stylelint.config.js": "stylelint",
  "stylelint.config.ts": "stylelint",
  "stylelint.config.cjs": "stylelint",
  "stylelint.config.cts": "stylelint",
  "stylelint.config.mjs": "stylelint",
  "stylelint.config.mts": "stylelint",
  ".stylelintrc.json": "stylelint",
  ".stylelintrc.yaml": "stylelint",
  ".stylelintrc.yml": "stylelint",
  ".stylelintrc.js": "stylelint",
  ".stylelintrc.ts": "stylelint",
  ".stylelintrc.cjs": "stylelint",
  ".stylelintrc.cts": "stylelint",
  ".stylelintrc.mjs": "stylelint",
  ".stylelintrc.mts": "stylelint",
  ".styluaignore": "stylua-ignore",
  "stylua.toml": "stylua",
  "svelte.config.js": "svelte-config",
  "svelte.config.ts": "svelte-config",
  "svelte.config.cjs": "svelte-config",
  "svelte.config.mjs": "svelte-config",
  ".swiftformat": "swiftformat",
  "tailwind.js": "tailwind",
  "tailwind.ts": "tailwind",
  "tailwind.config.js": "tailwind",
  "tailwind.config.cjs": "tailwind",
  "tailwind.config.mjs": "tailwind",
  "tailwind.config.ts": "tailwind",
  "tailwind.config.cts": "tailwind",
  "tailwind.config.mts": "tailwind",
  "taskfile.yml": "taskfile",
  "taskfile.yaml": "taskfile",
  "taskfile.dist.yml": "taskfile",
  "taskfile.dist.yaml": "taskfile",
  ".taskrc.yml": "taskfile",
  ".taskrc.yaml": "taskfile",
  ".taurignore": "tauri-ignore",
  "tauri.conf.json": "tauri",
  "tauri.conf.json5": "tauri",
  "tauri.config.json": "tauri",
  "tauri.linux.conf.json": "tauri",
  "tauri.windows.conf.json": "tauri",
  "tauri.macos.conf.json": "tauri",
  "Tauri.toml": "tauri",
  "todo.md": "todo",
  "todos.md": "todo",
  "turbo.json": "turbo",
  "tsconfig.json": "typescript-config",
  "tsconfig.app.json": "typescript-config",
  "tsconfig.editor.json": "typescript-config",
  "tsconfig.spec.json": "typescript-config",
  "tsconfig.base.json": "typescript-config",
  "tsconfig.build.json": "typescript-config",
  "tsconfig.eslint.json": "typescript-config",
  "tsconfig.lib.json": "typescript-config",
  "tsconfig.lib.prod.json": "typescript-config",
  "tsconfig.node.json": "typescript-config",
  "tsconfig.test.json": "typescript-config",
  "tsconfig.e2e.json": "typescript-config",
  "tsconfig.web.json": "typescript-config",
  "tsconfig.webworker.json": "typescript-config",
  "tsconfig.worker.json": "typescript-config",
  "tsconfig.config.json": "typescript-config",
  "tsconfig.vitest.json": "typescript-config",
  "tsconfig.cjs.json": "typescript-config",
  "tsconfig.esm.json": "typescript-config",
  "tsconfig.mjs.json": "typescript-config",
  "tsconfig.doc.json": "typescript-config",
  "tsconfig.paths.json": "typescript-config",
  "tsconfig.main.json": "typescript-config",
  "tsconfig.cypress-ct.json": "typescript-config",
  "tsconfig.components.json": "typescript-config",
  "typst.toml": "typst",
  "uno.config.js": "unocss",
  "uno.config.mjs": "unocss",
  "uno.config.ts": "unocss",
  "uno.config.mts": "unocss",
  "unocss.config.js": "unocss",
  "unocss.config.mjs": "unocss",
  "unocss.config.ts": "unocss",
  "unocss.config.mts": "unocss",
  "uv.lock": "uv",
  "vpkg.json": "v",
  "v.mod": "v",
  ".vercelignore": "vercel-ignore",
  ".nowignore": "vercel-ignore",
  "vercel.json": "vercel",
  "now.json": "vercel",
  "vite.config.js": "vite",
  "vite.config.mjs": "vite",
  "vite.config.cjs": "vite",
  "vite.config.ts": "vite",
  "vite.config.cts": "vite",
  "vite.config.mts": "vite",
  "vitest.config.ts": "vitest",
  "vitest.config.mts": "vitest",
  "vitest.config.cts": "vitest",
  "vitest.config.js": "vitest",
  "vitest.config.mjs": "vitest",
  "vitest.config.cjs": "vitest",
  "vitest.workspace.js": "vitest",
  "vitest.workspace.ts": "vitest",
  "vitest.workspace.json": "vitest",
  ".vscodeignore": "vscode-ignore",
  "vue.config.js": "vue-config",
  "vue.config.cjs": "vue-config",
  "vue.config.mjs": "vue-config",
  "vue.config.ts": "vue-config",
  "vue.config.cts": "vue-config",
  "vue.config.mts": "vue-config",
  ".vuerc": "vue-config",
  "wally.toml": "wally",
  "wally.lock": "wally",
  "webpack.js": "webpack",
  "webpack.cjs": "webpack",
  "webpack.mjs": "webpack",
  "webpack.ts": "webpack",
  "webpack.cts": "webpack",
  "webpack.mts": "webpack",
  "webpack.base.js": "webpack",
  "webpack.base.cjs": "webpack",
  "webpack.base.mjs": "webpack",
  "webpack.base.ts": "webpack",
  "webpack.base.cts": "webpack",
  "webpack.base.mts": "webpack",
  "webpack.config.js": "webpack",
  "webpack.config.cjs": "webpack",
  "webpack.config.mjs": "webpack",
  "webpack.config.ts": "webpack",
  "webpack.config.cts": "webpack",
  "webpack.config.mts": "webpack",
  "webpack.common.js": "webpack",
  "webpack.common.cjs": "webpack",
  "webpack.common.mjs": "webpack",
  "webpack.common.ts": "webpack",
  "webpack.common.cts": "webpack",
  "webpack.common.mts": "webpack",
  "webpack.config.common.js": "webpack",
  "webpack.config.common.cjs": "webpack",
  "webpack.config.common.mjs": "webpack",
  "webpack.config.common.ts": "webpack",
  "webpack.config.common.cts": "webpack",
  "webpack.config.common.mts": "webpack",
  "webpack.config.common.babel.js": "webpack",
  "webpack.config.common.babel.ts": "webpack",
  "webpack.dev.js": "webpack",
  "webpack.dev.cjs": "webpack",
  "webpack.dev.mjs": "webpack",
  "webpack.dev.ts": "webpack",
  "webpack.dev.cts": "webpack",
  "webpack.dev.mts": "webpack",
  "webpack.development.js": "webpack",
  "webpack.development.cjs": "webpack",
  "webpack.development.mjs": "webpack",
  "webpack.development.ts": "webpack",
  "webpack.development.cts": "webpack",
  "webpack.development.mts": "webpack",
  "webpack.config.dev.js": "webpack",
  "webpack.config.dev.cjs": "webpack",
  "webpack.config.dev.mjs": "webpack",
  "webpack.config.dev.ts": "webpack",
  "webpack.config.dev.cts": "webpack",
  "webpack.config.dev.mts": "webpack",
  "webpack.config.dev.babel.js": "webpack",
  "webpack.config.dev.babel.ts": "webpack",
  "webpack.config.main.js": "webpack",
  "webpack.config.renderer.ts": "webpack",
  "webpack.mix.js": "webpack",
  "webpack.mix.cjs": "webpack",
  "webpack.mix.mjs": "webpack",
  "webpack.mix.ts": "webpack",
  "webpack.mix.cts": "webpack",
  "webpack.mix.mts": "webpack",
  "webpack.prod.js": "webpack",
  "webpack.prod.cjs": "webpack",
  "webpack.prod.mjs": "webpack",
  "webpack.prod.ts": "webpack",
  "webpack.prod.cts": "webpack",
  "webpack.prod.mts": "webpack",
  "webpack.prod.config.js": "webpack",
  "webpack.prod.config.cjs": "webpack",
  "webpack.prod.config.mjs": "webpack",
  "webpack.prod.config.ts": "webpack",
  "webpack.prod.config.cts": "webpack",
  "webpack.prod.config.mts": "webpack",
  "webpack.production.js": "webpack",
  "webpack.production.cjs": "webpack",
  "webpack.production.mjs": "webpack",
  "webpack.production.ts": "webpack",
  "webpack.production.cts": "webpack",
  "webpack.production.mts": "webpack",
  "webpack.server.js": "webpack",
  "webpack.server.cjs": "webpack",
  "webpack.server.mjs": "webpack",
  "webpack.server.ts": "webpack",
  "webpack.server.cts": "webpack",
  "webpack.server.mts": "webpack",
  "webpack.client.js": "webpack",
  "webpack.client.cjs": "webpack",
  "webpack.client.mjs": "webpack",
  "webpack.client.ts": "webpack",
  "webpack.client.cts": "webpack",
  "webpack.client.mts": "webpack",
  "webpack.config.server.js": "webpack",
  "webpack.config.server.cjs": "webpack",
  "webpack.config.server.mjs": "webpack",
  "webpack.config.server.ts": "webpack",
  "webpack.config.server.cts": "webpack",
  "webpack.config.server.mts": "webpack",
  "webpack.config.client.js": "webpack",
  "webpack.config.client.cjs": "webpack",
  "webpack.config.client.mjs": "webpack",
  "webpack.config.client.ts": "webpack",
  "webpack.config.client.cts": "webpack",
  "webpack.config.client.mts": "webpack",
  "webpack.config.production.babel.js": "webpack",
  "webpack.config.production.babel.ts": "webpack",
  "webpack.config.prod.babel.js": "webpack",
  "webpack.config.prod.babel.cjs": "webpack",
  "webpack.config.prod.babel.mjs": "webpack",
  "webpack.config.prod.babel.ts": "webpack",
  "webpack.config.prod.babel.cts": "webpack",
  "webpack.config.prod.babel.mts": "webpack",
  "webpack.config.prod.js": "webpack",
  "webpack.config.prod.cjs": "webpack",
  "webpack.config.prod.mjs": "webpack",
  "webpack.config.prod.ts": "webpack",
  "webpack.config.prod.cts": "webpack",
  "webpack.config.prod.mts": "webpack",
  "webpack.config.production.js": "webpack",
  "webpack.config.production.cjs": "webpack",
  "webpack.config.production.mjs": "webpack",
  "webpack.config.production.ts": "webpack",
  "webpack.config.production.cts": "webpack",
  "webpack.config.production.mts": "webpack",
  "webpack.config.staging.js": "webpack",
  "webpack.config.staging.cjs": "webpack",
  "webpack.config.staging.mjs": "webpack",
  "webpack.config.staging.ts": "webpack",
  "webpack.config.staging.cts": "webpack",
  "webpack.config.staging.mts": "webpack",
  "webpack.config.babel.js": "webpack",
  "webpack.config.babel.ts": "webpack",
  "webpack.config.base.babel.js": "webpack",
  "webpack.config.base.babel.ts": "webpack",
  "webpack.config.base.js": "webpack",
  "webpack.config.base.cjs": "webpack",
  "webpack.config.base.mjs": "webpack",
  "webpack.config.base.ts": "webpack",
  "webpack.config.base.cts": "webpack",
  "webpack.config.base.mts": "webpack",
  "webpack.config.staging.babel.js": "webpack",
  "webpack.config.staging.babel.ts": "webpack",
  "webpack.config.coffee": "webpack",
  "webpack.config.test.js": "webpack",
  "webpack.config.test.cjs": "webpack",
  "webpack.config.test.mjs": "webpack",
  "webpack.config.test.ts": "webpack",
  "webpack.config.test.cts": "webpack",
  "webpack.config.test.mts": "webpack",
  "webpack.config.vendor.js": "webpack",
  "webpack.config.vendor.cjs": "webpack",
  "webpack.config.vendor.mjs": "webpack",
  "webpack.config.vendor.ts": "webpack",
  "webpack.config.vendor.cts": "webpack",
  "webpack.config.vendor.mts": "webpack",
  "webpack.config.vendor.production.js": "webpack",
  "webpack.config.vendor.production.cjs": "webpack",
  "webpack.config.vendor.production.mjs": "webpack",
  "webpack.config.vendor.production.ts": "webpack",
  "webpack.config.vendor.production.cts": "webpack",
  "webpack.config.vendor.production.mts": "webpack",
  "webpack.test.js": "webpack",
  "webpack.test.cjs": "webpack",
  "webpack.test.mjs": "webpack",
  "webpack.test.ts": "webpack",
  "webpack.test.cts": "webpack",
  "webpack.test.mts": "webpack",
  "webpack.dist.js": "webpack",
  "webpack.dist.cjs": "webpack",
  "webpack.dist.mjs": "webpack",
  "webpack.dist.ts": "webpack",
  "webpack.dist.cts": "webpack",
  "webpack.dist.mts": "webpack",
  "webpackfile.js": "webpack",
  "webpackfile.cjs": "webpack",
  "webpackfile.mjs": "webpack",
  "webpackfile.ts": "webpack",
  "webpackfile.cts": "webpack",
  "webpackfile.mts": "webpack",
  "windi.config.js": "windi",
  "windi.config.cjs": "windi",
  "windi.config.ts": "windi",
  "windi.config.cts": "windi",
  "windi.config.json": "windi",
  "wrangler.toml": "wrangler",
  "wrangler.json": "wrangler",
  "wrangler.jsonc": "wrangler",
  "wxt.config.js": "wxt",
  "wxt.config.ts": "wxt",
  "xmake.lua": "xmake",
  ".htaccess": "xml",
  "yarn.lock": "yarn-lock",
  ".yarnrc": "yarn",
  ".yarnclean": "yarn",
  ".yarn-integrity": "yarn",
  "yarn-error.log": "yarn",
  ".yarnrc.yml": "yarn",
  ".yarnrc.yaml": "yarn",
  "yarn.config.cjs": "yarn",
};

export const fileExtensions: Record<string, string> = {
  fbx: "3d",
  glb: "3d",
  gltf: "3d",
  ma: "3d",
  mb: "3d",
  obj: "3d",
  prc: "3d",
  stl: "3d",
  u3d: "3d",
  usd: "3d",
  aep: "adobe-ae",
  ai: "adobe-ai",
  indd: "adobe-id",
  indl: "adobe-id",
  indb: "adobe-id",
  psd: "image",
  psb: "image",
  xd: "adobe-xd",
  ab: "amber",
  amber: "amber",
  apk: "android",
  smali: "android",
  dex: "android",
  "ng-template": "angular",
  g4: "antlr",
  thrift: "apache",
  apib: "api-blueprint",
  apiblueprint: "api-blueprint",
  ino: "arduino",
  adoc: "asciidoc",
  asciidoc: "asciidoc",
  asc: "key",
  asm: "assembly",
  a51: "assembly",
  inc: "assembly",
  nasm: "assembly",
  s: "assembly",
  ms: "assembly",
  agc: "assembly",
  ags: "assembly",
  aea: "assembly",
  argus: "assembly",
  mitigus: "assembly",
  binsource: "assembly",
  astro: "astro",
  aac: "audio",
  aiff: "audio",
  alac: "audio",
  flac: "audio",
  m4a: "audio",
  m4p: "audio",
  mogg: "audio",
  mp3: "audio",
  oga: "audio",
  opus: "audio",
  wav: "audio",
  wma: "audio",
  wv: "audio",
  ahk: "autohotkey",
  "azure-pipelines.yml": "azure-pipelines",
  "azure-pipelines.yaml": "azure-pipelines",
  "azure-pipelines-main.yml": "azure-pipelines",
  "azure-pipelines-main.yaml": "azure-pipelines",
  sh: "bash",
  ksh: "bash",
  csh: "bash",
  tcsh: "bash",
  zsh: "bash",
  bash: "bash",
  awk: "bash",
  fish: "bash",
  bat: "batch",
  cmd: "batch",
  bzl: "bazel",
  bazel: "bazel",
  bicep: "bicep",
  bicepparam: "bicep",
  bin: "binary",
  blink: "blink",
  h: "c-header",
  c: "c",
  i: "c",
  mi: "c",
  cabal: "cabal",
  caddyfile: "caddy",
  cer: "certificate",
  cert: "certificate",
  crt: "certificate",
  pfx: "certificate",
  entitlements: "certificate",
  clj: "clojure",
  cljs: "clojure",
  cljc: "clojure",
  cmake: "cmake",
  cob: "cobol",
  cbl: "cobol",
  coffee: "coffeescript",
  cson: "coffeescript",
  iced: "coffeescript",
  hh: "cpp-header",
  hpp: "cpp-header",
  hxx: "cpp-header",
  "h++": "cpp-header",
  hp: "cpp-header",
  tcc: "cpp-header",
  inl: "cpp-header",
  cc: "cpp",
  cpp: "cpp",
  cxx: "cpp",
  "c++": "cpp",
  cp: "cpp",
  mii: "cpp",
  ii: "cpp",
  cr: "crystal",
  ecr: "crystal",
  cs: "csharp",
  csx: "csharp",
  csharp: "csharp",
  "css.map": "css-map",
  css: "css",
  csv: "csv",
  tsv: "csv",
  psv: "csv",
  feature: "cucumber",
  features: "cucumber",
  cu: "cuda",
  cuh: "cuda",
  cue: "cue",
  d: "d",
  di: "d",
  "darklua.json": "darklua",
  "darklua.json5": "darklua",
  "freezed.dart": "dart-generated",
  "g.dart": "dart-generated",
  dart: "dart",
  pdb: "database",
  sql: "database",
  pks: "database",
  pkb: "database",
  accdb: "database",
  mdb: "database",
  sqlite: "database",
  sqlite3: "database",
  pgsql: "database",
  postgres: "database",
  plpgsql: "database",
  psql: "database",
  db: "zip",
  db3: "database",
  dat: "database",
  dhall: "dhall",
  dhallb: "dhall",
  djt: "django",
  "docker-compose.yml": "docker-compose",
  "docker-compose.yaml": "docker-compose",
  "compose.yaml": "docker-compose",
  "compose.yml": "docker-compose",
  dockerignore: "docker-ignore",
  containerignore: "docker-ignore",
  dockerfile: "docker",
  containerfile: "docker",
  drawio: "drawio",
  dio: "drawio",
  ejs: "ejs",
  ex: "elixir",
  exs: "elixir",
  eex: "elixir",
  leex: "elixir",
  heex: "elixir",
  elm: "elm",
  env: "env",
  erl: "erlang",
  exe: "exe",
  msi: "exe",
  fig: "figma",
  woff: "font",
  woff2: "font",
  ttf: "font",
  eot: "font",
  suit: "font",
  otf: "font",
  bmap: "font",
  fnt: "font",
  odttf: "font",
  ttc: "font",
  font: "font",
  fonts: "font",
  sui: "font",
  ntf: "font",
  mrf: "font",
  f: "fortran",
  f77: "fortran",
  f90: "fortran",
  f95: "fortran",
  f03: "fortran",
  f08: "fortran",
  for: "fortran",
  fs: "fsharp",
  fsx: "fsharp",
  fsi: "fsharp",
  patch: "git",
  "gitlab-ci.yml": "gitlab",
  "gitlab-ci.yaml": "gitlab",
  gleam: "gleam",
  tmpl: "go-template",
  templ: "go-template",
  gotmpl: "go-template",
  gohtml: "go-template",
  "go.tmp": "go-template",
  "go.html": "go-template",
  go: "go",
  godot: "godot-assets",
  tres: "godot-assets",
  tscn: "godot-assets",
  gdns: "godot-assets",
  gdnlib: "godot-assets",
  gdshader: "godot-assets",
  gdshaderinc: "godot-assets",
  gdextension: "godot-assets",
  gd: "godot",
  gradle: "gradle",
  graphql: "graphql",
  gql: "graphql",
  groovy: "groovy",
  haml: "haml",
  hbs: "handlebars",
  mustache: "handlebars",
  ha: "hare",
  hs: "haskell",
  hx: "haxe",
  htm: "html",
  html: "html",
  xhtml: "html",
  html_vm: "html",
  asp: "html",
  http: "http",
  rest: "http",
  huff: "huff",
  png: "image",
  jpeg: "image",
  jpg: "image",
  gif: "image",
  ico: "image",
  tif: "image",
  tiff: "image",
  ami: "image",
  apx: "image",
  avif: "image",
  bmp: "image",
  bpg: "image",
  brk: "image",
  cur: "image",
  dds: "image",
  dng: "image",
  exr: "image",
  fpx: "image",
  gbr: "image",
  img: "image",
  jbig2: "image",
  jb2: "image",
  jng: "image",
  jxr: "image",
  pgf: "image",
  pic: "image",
  raw: "image",
  webp: "image",
  eps: "image",
  afphoto: "image",
  ase: "image",
  aseprite: "image",
  clip: "image",
  cpt: "image",
  heif: "image",
  heic: "image",
  kra: "image",
  mdp: "image",
  ora: "image",
  pdn: "image",
  reb: "image",
  sai: "image",
  tga: "image",
  xcf: "image",
  jfif: "image",
  ppm: "image",
  pbm: "image",
  pgm: "image",
  pnm: "image",
  icns: "image",
  class: "java-class",
  jar: "java-jar",
  java: "java",
  jsp: "java",
  "jsconfig.json": "javascript-config",
  "js.map": "javascript-map",
  "mjs.map": "javascript-map",
  "cjs.map": "javascript-map",
  jsx: "javascript-react",
  "spec.js": "javascript-test",
  "spec.cjs": "javascript-test",
  "spec.mjs": "javascript-test",
  "e2e-spec.js": "javascript-test",
  "e2e-spec.cjs": "javascript-test",
  "e2e-spec.mjs": "javascript-test",
  "test.js": "javascript-test",
  "test.cjs": "javascript-test",
  "test.mjs": "javascript-test",
  "js.snap": "javascript-test",
  "cy.js": "javascript-test",
  "spec.jsx": "javascript-test",
  "test.jsx": "javascript-test",
  "jsx.snap": "javascript-test",
  "cy.jsx": "javascript-test",
  esx: "javascript",
  js: "javascript",
  cjs: "javascript",
  mjs: "javascript",
  jinja: "jinja",
  jinja2: "jinja",
  j2: "jinja",
  "jinja-html": "jinja",
  "schema.json": "json-schema",
  json: "json",
  jsonc: "json",
  tsbuildinfo: "json",
  json5: "json",
  jsonl: "json",
  ndjson: "json",
  hjson: "json",
  webmanifest: "json",
  jucer: "juce",
  jule: "jule",
  jl: "julia",
  ipynb: "jupyter",
  just: "just",
  kdl: "kdl",
  pub: "key",
  key: "key",
  pem: "key",
  gpg: "key",
  passwd: "key",
  keystore: "key",
  kt: "kotlin",
  kts: "kotlin",
  "blade.php": "laravel",
  "inky.php": "laravel",
  tex: "latex",
  sty: "latex",
  dtx: "latex",
  ltx: "latex",
  latte: "latte",
  less: "less",
  lib: "lib",
  bib: "lib",
  liquid: "liquid",
  lisp: "lisp",
  lsp: "lisp",
  cl: "lisp",
  fast: "lisp",
  log: "log",
  "client.lua": "lua-client",
  "server.lua": "lua-server",
  "spec.lua": "lua-test",
  "test.lua": "lua-test",
  lua: "lua",
  "client.luau": "luau-client",
  "server.luau": "luau-server",
  "spec.luau": "luau-test",
  "test.luau": "luau-test",
  luau: "luau",
  mk: "makefile",
  mdx: "markdown-mdx",
  md: "markdown",
  markdown: "markdown",
  rst: "markdown",
  marko: "marko",
  m: "matlab",
  mat: "matlab",
  mmd: "mermaid",
  mermaid: "mermaid",
  wrap: "meson",
  mid: "midi",
  midi: "midi",
  mjml: "mjml",
  xlsx: "ms-excel",
  xlsm: "ms-excel",
  xls: "ms-excel",
  xlsb: "ms-excel",
  xltx: "ms-excel",
  xltm: "ms-excel",
  xlt: "ms-excel",
  ods: "ms-excel",
  pptx: "ms-powerpoint",
  ppt: "ms-powerpoint",
  pptm: "ms-powerpoint",
  potx: "ms-powerpoint",
  potm: "ms-powerpoint",
  ppsx: "ms-powerpoint",
  ppsm: "ms-powerpoint",
  pps: "ms-powerpoint",
  ppam: "ms-powerpoint",
  ppa: "ms-powerpoint",
  odp: "ms-powerpoint",
  doc: "ms-word",
  docm: "ms-word",
  docx: "ms-word",
  dot: "ms-word",
  dotm: "ms-word",
  dotx: "ms-word",
  rtf: "ms-word",
  odt: "ms-word",
  nf: "nextflow",
  nginx: "nginx",
  nginxconf: "nginx",
  nginxconfig: "nginx",
  nim: "nim",
  nimble: "nim",
  ninja: "ninja",
  nix: "nix",
  nupkg: "nuget",
  njk: "nunjucks",
  nunjucks: "nunjucks",
  ml: "ocaml",
  mli: "ocaml",
  cmx: "ocaml",
  odin: "odin",
  tofu: "opentofu",
  "tofu.json": "opentofu",
  org: "org",
  pdf: "pdf",
  pl: "perl",
  pm: "perl",
  pod: "perl",
  t: "perl",
  psgi: "perl",
  raku: "perl",
  rakumod: "perl",
  rakutest: "perl",
  rakudoc: "perl",
  nqp: "perl",
  p6: "perl",
  pl6: "perl",
  pm6: "perl",
  php: "php",
  phtml: "phtml",
  pu: "plantuml",
  puml: "plantuml",
  plantuml: "plantuml",
  pcss: "postcss",
  sss: "postcss",
  ps1: "powershell",
  psm1: "powershell",
  psd1: "powershell",
  ps1xml: "powershell",
  psc1: "powershell",
  pssc: "powershell",
  prisma: "prisma",
  p: "prolog",
  pro: "prolog",
  ini: "properties",
  dlc: "properties",
  config: "properties",
  conf: "properties",
  properties: "properties",
  prop: "properties",
  settings: "properties",
  option: "properties",
  props: "properties",
  prefs: "properties",
  "sln.dotsettings": "properties",
  "sln.dotsettings.user": "properties",
  cfg: "properties",
  proto: "proto",
  jade: "pug",
  pug: "pug",
  pp: "puppet",
  epp: "puppet",
  pyc: "python-compiled",
  pyo: "python-compiled",
  pyd: "python-compiled",
  py: "python",
  r: "r",
  rkt: "racket",
  cshtml: "razor",
  vbhtml: "razor",
  rdata: "rdata",
  re: "reason",
  rei: "reason",
  res: "rescript",
  rmd: "rmd",
  rbxl: "roblox",
  rbxlx: "roblox",
  rbxm: "roblox",
  rbxmx: "roblox",
  rproj: "rproj",
  rsml: "rsml",
  rb: "ruby",
  erb: "ruby",
  rbs: "ruby",
  rs: "rust",
  ron: "rust",
  cls: "salesforce",
  scss: "sass",
  sass: "sass",
  scala: "scala",
  sc: "super-collider",
  scm: "scheme",
  "code-search": "search",
  glsl: "shader",
  vert: "shader",
  tesc: "shader",
  tese: "shader",
  geom: "shader",
  frag: "shader",
  comp: "shader",
  "vert.glsl": "shader",
  "tesc.glsl": "shader",
  "tese.glsl": "shader",
  "geom.glsl": "shader",
  "frag.glsl": "shader",
  "comp.glsl": "shader",
  "vertex.glsl": "shader",
  "geometry.glsl": "shader",
  "fragment.glsl": "shader",
  "compute.glsl": "shader",
  "ts.glsl": "shader",
  "gs.glsl": "shader",
  "vs.glsl": "shader",
  "fs.glsl": "shader",
  shader: "shader",
  vertexshader: "shader",
  fragmentshader: "shader",
  geometryshader: "shader",
  computeshader: "shader",
  hlsl: "shader",
  "pixel.hlsl": "shader",
  "geometry.hlsl": "shader",
  "compute.hlsl": "shader",
  "tessellation.hlsl": "shader",
  "px.hlsl": "shader",
  "geom.hlsl": "shader",
  "comp.hlsl": "shader",
  "tess.hlsl": "shader",
  wgsl: "shader",
  sketch: "sketch",
  sdf: "slidesk",
  sdt: "slidesk",
  sol: "solidity",
  spwn: "spwn",
  nut: "squirrel",
  ado: "stata",
  do: "stata",
  dta: "stata",
  "story.svelte": "storybook-svelte",
  "stories.svelte": "storybook-svelte",
  "story.vue": "storybook-vue",
  "stories.vue": "storybook-vue",
  "stories.js": "storybook",
  "stories.jsx": "storybook",
  "stories.mdx": "storybook",
  "story.js": "storybook",
  "story.jsx": "storybook",
  "stories.ts": "storybook",
  "stories.tsx": "storybook",
  "story.ts": "storybook",
  "story.tsx": "storybook",
  "story.mdx": "storybook",
  "sublime-project": "sublime",
  "sublime-workspace": "sublime",
  scd: "super-collider",
  svelte: "svelte",
  svg: "svg",
  swift: "swift",
  tauri: "tauri",
  tf: "terraform",
  "tf.json": "terraform",
  tfvars: "terraform",
  tfstate: "terraform",
  tfbackend: "terraform",
  txt: "text",
  todo: "todo",
  toml: "toml",
  twig: "twig",
  tw: "twine",
  twee: "twine",
  "tsconfig.json": "typescript-config",
  "d.ts": "typescript-def",
  "d.cts": "typescript-def",
  "d.mts": "typescript-def",
  tsx: "typescript-react",
  "spec.ts": "typescript-test",
  "spec.cts": "typescript-test",
  "spec.mts": "typescript-test",
  "cy.ts": "typescript-test",
  "e2e-spec.ts": "typescript-test",
  "e2e-spec.cts": "typescript-test",
  "e2e-spec.mts": "typescript-test",
  "test.ts": "typescript-test",
  "test.cts": "typescript-test",
  "test.mts": "typescript-test",
  "ts.snap": "typescript-test",
  "spec-d.ts": "typescript-test",
  "test-d.ts": "typescript-test",
  "spec.tsx": "typescript-test",
  "test.tsx": "typescript-test",
  "tsx.snap": "typescript-test",
  "cy.tsx": "typescript-test",
  ts: "typescript",
  cts: "typescript",
  mts: "typescript",
  typ: "typst",
  unity: "unity",
  url: "url",
  v: "v",
  vala: "vala",
  "css.ts": "vanilla-extract",
  vapi: "vapi",
  vto: "vento",
  vhd: "verilog",
  sv: "verilog",
  svh: "verilog",
  tape: "vhs",
  webm: "video",
  mkv: "video",
  flv: "video",
  vob: "video",
  ogv: "video",
  ogg: "video",
  gifv: "video",
  avi: "video",
  mov: "video",
  qt: "video",
  wmv: "video",
  yuv: "video",
  rm: "video",
  rmvb: "video",
  mp4: "video",
  m4v: "video",
  mpg: "video",
  mp2: "video",
  mpeg: "video",
  mpe: "video",
  mpv: "video",
  m2v: "video",
  vimrc: "vim",
  gvimrc: "vim",
  exrc: "vim",
  vim: "vim",
  viminfo: "vim",
  csproj: "visual-studio",
  "csproj.user": "visual-studio",
  vbproj: "visual-studio",
  "vbproj.user": "visual-studio",
  fsproj: "visual-studio",
  "fsproj.user": "visual-studio",
  ruleset: "visual-studio",
  sln: "visual-studio",
  slnf: "visual-studio",
  slnx: "visual-studio",
  suo: "visual-studio",
  vb: "visual-studio",
  vbs: "visual-studio",
  vcxitems: "visual-studio",
  "vcxitems.filters": "visual-studio",
  vcxproj: "visual-studio",
  "vcxproj.filters": "visual-studio",
  vital: "vital",
  vitalbank: "vital",
  vitallfo: "vital",
  vitalskin: "vital",
  vitaltable: "vital",
  vitaltheme: "vital",
  vsixmanifest: "vscode",
  vsix: "vscode",
  "code-workplace": "vscode",
  "code-workspace": "vscode",
  "code-profile": "vscode",
  "code-snippets": "vscode",
  vue: "vue",
  wat: "web-assembly",
  wasm: "web-assembly",
  windi: "windi",
  "workflows/yml": "workflow",
  "workflows/yaml": "workflow",
  xaml: "xaml",
  axaml: "xaml",
  xcsettings: "xcode",
  xcworkspacedata: "xcode",
  xml: "xml",
  plist: "xml",
  xsd: "xml",
  dtd: "xml",
  xsl: "xml",
  xslt: "xml",
  resx: "xml",
  iml: "xml",
  xquery: "xml",
  tmLanguage: "xml",
  manifest: "xml",
  project: "xml",
  "xml.dist": "xml",
  "xml.dist.sample": "xml",
  dmn: "xml",
  jrxml: "xml",
  yml: "yaml",
  yaml: "yaml",
  zap: "zap",
  zig: "zig",
  "7z": "zip",
  arj: "zip",
  "aseprite-extension": "zip",
  bz: "zip",
  bz2: "zip",
  gz: "zip",
  paq8n: "zip",
  paq8o: "zip",
  pkg: "zip",
  rar: "zip",
  tar: "zip",
  tbz: "zip",
  tbz2: "zip",
  tgz: "zip",
  xz: "zip",
  z: "zip",
  zip: "zip",
  zpaq: "zip",
  zst: "zip",
};
